# Generated by Django 5.1.3 on 2025-10-25 17:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AMCList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AMC_list_file', models.FileField(upload_to='AMC list/')),
                ('param', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('S', 'superadmin'), ('A', 'agent'), ('U', 'user')], max_length=2, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('otp', models.CharField(max_length=10, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('utimestamp', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agent_id', models.CharField(blank=True, max_length=10, null=True)),
                ('account_type', models.CharField(blank=True, choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('acco_no', models.CharField(blank=True, max_length=20, null=True)),
                ('reenter_account_no', models.CharField(blank=True, max_length=20, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=15, null=True)),
                ('account_holdername', models.CharField(blank=True, max_length=255, null=True)),
                ('ARN', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=2, null=True)),
                ('ARN_no', models.CharField(blank=True, max_length=6, null=True)),
                ('ARN_card_image', models.ImageField(blank=True, null=True, upload_to='ARN image/')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='yourphoto/')),
                ('pan_card_image', models.ImageField(blank=True, null=True, upload_to='pancard/')),
                ('address_proof', models.CharField(blank=True, choices=[('A', 'Aadhaar Card'), ('B', 'Voter ID'), ('C', 'Driving License'), ('D', 'Passport')], max_length=2, null=True)),
                ('front_image', models.ImageField(blank=True, null=True, upload_to='frontimage/')),
                ('back_image', models.ImageField(blank=True, null=True, upload_to='backimage/')),
                ('EUIN_card_image', models.ImageField(blank=True, null=True, upload_to='EUIN card image/')),
                ('NISM_certificate_image', models.ImageField(blank=True, null=True, upload_to='NISM certificate image/')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('utimestamp', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AMCCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_code', models.CharField(max_length=100)),
                ('scheme_name', models.CharField(max_length=500)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amc_cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Enach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_code', models.CharField(max_length=10)),
                ('mandate_id', models.CharField(max_length=25)),
                ('api_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.agent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fatca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('param', models.JSONField(null=True)),
                ('pan_number', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('invester_name', models.CharField(max_length=70)),
                ('dob', models.DateField(blank=True, null=True)),
                ('tax_status', models.CharField(choices=[('01', 'Individual'), ('02', 'On behalf of minor'), ('03', 'HUF'), ('04', 'Company'), ('05', 'AOP'), ('06', 'Partnership Firm'), ('07', 'Body Corporate'), ('08', 'Trust'), ('09', 'Society'), ('10', 'Others'), ('11', 'NRI-Others'), ('12', 'DFI'), ('13', 'Sole Proprietorship'), ('21', 'NRE'), ('22', 'OCB'), ('23', 'FII'), ('24', 'NRO'), ('25', 'Overseas Corp. Body - Others'), ('26', 'NRI Child'), ('27', 'NRI - HUF (NRO)'), ('28', 'NRI - Minor (NRO)'), ('29', 'NRI - HUF (NRE)'), ('31', 'Provident Fund'), ('32', 'Super Annuation Fund'), ('33', 'Gratuity Fund'), ('34', 'Pension Fund'), ('36', 'Mutual Funds FOF Schemes'), ('37', 'NPS Trust'), ('38', 'Global Development Network'), ('39', 'FCRA'), ('41', 'QFI - Individual'), ('42', 'QFI - Minors'), ('43', 'QFI - Corporate'), ('44', 'QFI - Pension Funds'), ('45', 'QFI - Hedge Funds'), ('46', 'QFI - Mutual Funds'), ('47', 'LLP'), ('48', 'Non-Profit organization [NPO]'), ('51', 'Public Limited Company'), ('52', 'Private Limited Company'), ('53', 'Unlisted Company'), ('54', 'Mutual Funds'), ('55', 'FPI - Category I'), ('56', 'FPI - Category II'), ('57', 'FPI - Category III'), ('58', 'Financial Institutions'), ('59', 'Body of Individuals, Insurance Company'), ('60', 'OCI - Repatriation'), ('61', 'OCI - Non-Repatriation'), ('62', 'Person of Indian Origin'), ('70', 'Government Body'), ('72', 'Defense Establishment'), ('73', 'Non - Government Organisation'), ('74', 'Bank/Co-Operative Bank'), ('75', 'Artificial Juridical Person'), ('76', 'Seafarer NRE'), ('77', 'Seafarer NRO'), ('78', 'Local Authority'), ('79', 'Other')], max_length=3)),
                ('data_src', models.CharField(choices=[('P', 'Physical'), ('E', 'Electronic')], max_length=3)),
                ('address_type', models.CharField(choices=[('1', 'Residential or Business'), ('2', 'Residential'), ('3', 'Business'), ('4', 'Registered Office'), ('5', 'Unspecified')], max_length=1)),
                ('applications_type', models.CharField(max_length=60)),
                ('tpin1', models.CharField(max_length=20)),
                ('srce_wealt', models.CharField(max_length=3)),
                ('pep_flag', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No'), ('R', 'Relative')], max_length=2, null=True)),
                ('occupation_code', models.CharField(choices=[('01', 'Business'), ('02', 'Services'), ('03', 'Professional'), ('04', 'Agriculture'), ('05', 'Retired'), ('06', 'Housewife'), ('07', 'Student'), ('08', 'Others')], max_length=2)),
                ('occupation_Type', models.CharField(choices=[('S', 'Service'), ('B', 'Business'), ('O', 'Others'), ('X', 'Not Categorized')], max_length=1)),
                ('exch_name', models.CharField(choices=[('B', 'BSE'), ('N', 'NSE'), ('O', 'Others')], max_length=2)),
                ('ubo_appl', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=2)),
                ('ubo_count', models.CharField(blank=True, max_length=3, null=True)),
                ('ubo_name', models.CharField(blank=True, max_length=70, null=True)),
                ('ubo_pan', models.CharField(blank=True, max_length=10, null=True)),
                ('ubo_add_ty', models.CharField(blank=True, choices=[('1', 'Residential or Business'), ('2', 'Residential'), ('3', 'Business'), ('4', 'Registered Office'), ('5', 'Unspecified')], max_length=2, null=True)),
                ('ubo_gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, null=True)),
                ('ubo_fr_nam', models.CharField(blank=True, max_length=50, null=True)),
                ('ubo_occ', models.CharField(blank=True, choices=[('01', 'Business'), ('02', 'Services'), ('03', 'Professional'), ('04', 'Agriculture'), ('05', 'Retired'), ('06', 'Housewife'), ('07', 'Student'), ('08', 'Others')], max_length=2, null=True)),
                ('ubo_occ_ty', models.CharField(blank=True, choices=[('S', 'Service'), ('B', 'Business'), ('O', 'Others'), ('X', 'Not Categorized')], max_length=2, null=True)),
                ('ubo_code', models.CharField(blank=True, max_length=3, null=True)),
                ('aadhaar_rp', models.CharField(blank=True, max_length=30, null=True)),
                ('new_change', models.CharField(choices=[('N', 'This value should be updated for first time'), ('C', 'This Value should be provided for change in already provided information')], max_length=2)),
                ('log_name', models.CharField(blank=True, max_length=30, null=True)),
                ('UBO_EXCH', models.CharField(blank=True, choices=[('B', 'BSE'), ('N', 'NSE'), ('O', 'Others')], max_length=4, null=True)),
                ('filler1', models.CharField(blank=True, max_length=30, null=True)),
                ('filler2', models.CharField(blank=True, max_length=30, null=True)),
                ('api_data', models.JSONField()),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.agent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mandate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mandate_id', models.CharField(max_length=10)),
                ('client_code', models.CharField(max_length=10)),
                ('amount', models.CharField(max_length=100)),
                ('mandate_type', models.CharField(choices=[('X', 'XSIP'), ('I', 'ISIP'), ('N', 'Net Banking')], max_length=1)),
                ('account_no', models.CharField(max_length=20)),
                ('account_type', models.CharField(choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2)),
                ('ifsc_code', models.CharField(max_length=11)),
                ('misc_code', models.CharField(blank=True, max_length=9, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('api_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.agent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Uccregister',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member_code', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(max_length=15, unique=True)),
                ('mpin', models.CharField(max_length=50)),
                ('regn_type', models.CharField(choices=[('NEW', 'NEW'), ('MOD', 'MOD')], max_length=10)),
                ('param', models.JSONField(null=True)),
                ('tax_status', models.CharField(blank=True, choices=[('01', 'Individual'), ('02', 'On behalf of minor'), ('03', 'HUF'), ('04', 'Company'), ('05', 'AOP'), ('06', 'Partnership Firm'), ('07', 'Body Corporate'), ('08', 'Trust'), ('09', 'Society'), ('10', 'Others'), ('11', 'NRI-Others'), ('12', 'DFI'), ('13', 'Sole Proprietorship'), ('21', 'NRE'), ('22', 'OCB'), ('23', 'FII'), ('24', 'NRO'), ('25', 'Overseas Corp. Body - Others'), ('26', 'NRI Child'), ('27', 'NRI - HUF (NRO)'), ('28', 'NRI - Minor (NRO)'), ('29', 'NRI - HUF (NRE)'), ('31', 'Provident Fund'), ('32', 'Super Annuation Fund'), ('33', 'Gratuity Fund'), ('34', 'Pension Fund'), ('36', 'Mutual Funds FOF Schemes'), ('37', 'NPS Trust'), ('38', 'Global Development Network'), ('39', 'FCRA'), ('41', 'QFI - Individual'), ('42', 'QFI - Minors'), ('43', 'QFI - Corporate'), ('44', 'QFI - Pension Funds'), ('45', 'QFI - Hedge Funds'), ('46', 'QFI - Mutual Funds'), ('47', 'LLP'), ('48', 'Non-Profit organization [NPO]'), ('51', 'Public Limited Company'), ('52', 'Private Limited Company'), ('53', 'Unlisted Company'), ('54', 'Mutual Funds'), ('55', 'FPI - Category I'), ('56', 'FPI - Category II'), ('57', 'FPI - Category III'), ('58', 'Financial Institutions'), ('59', 'Body of Individuals, Insurance Company'), ('60', 'OCI - Repatriation'), ('61', 'OCI - Non-Repatriation'), ('62', 'Person of Indian Origin'), ('70', 'Government Body'), ('72', 'Defense Establishment'), ('73', 'Non - Government Organisation'), ('74', 'Bank/Co-Operative Bank'), ('75', 'Artificial Juridical Person'), ('76', 'Seafarer NRE'), ('77', 'Seafarer NRO'), ('78', 'Local Authority'), ('79', 'Other')], max_length=2, null=True, verbose_name='Tax Status')),
                ('occupation_code', models.CharField(choices=[('01', 'Business'), ('02', 'Services'), ('03', 'Professional'), ('04', 'Agriculture'), ('05', 'Retired'), ('06', 'Housewife'), ('07', 'Student'), ('08', 'Others')], max_length=2, verbose_name='Occupation Code')),
                ('holding_code', models.CharField(blank=True, choices=[('SI', 'Single'), ('JO', 'Joint'), ('AS', 'Anyone or Survivor')], max_length=2, null=True, verbose_name='Client Holding Code')),
                ('primary_holder_exempt_category', models.CharField(blank=True, choices=[('01', 'SIKKIM Resident'), ('02', 'Transactions carried out on behalf of STATE GOVT'), ('03', 'Transactions carried out on behalf of CENTRAL GOVT'), ('04', 'COURT APPOINTED OFFICIALS'), ('05', 'UN Entity/Multilateral agency exempt from paying tax in India'), ('06', 'Official Liquidator'), ('07', 'Court Receiver'), ('08', 'Investment in Mutual Funds Upto Rs. 50,000/- p.a. including SIP')], max_length=2, null=True, verbose_name='Pan Exempt Category')),
                ('second_holder_exempt_category', models.CharField(blank=True, choices=[('01', 'SIKKIM Resident'), ('02', 'Transactions carried out on behalf of STATE GOVT'), ('03', 'Transactions carried out on behalf of CENTRAL GOVT'), ('04', 'COURT APPOINTED OFFICIALS'), ('05', 'UN Entity/Multilateral agency exempt from paying tax in India'), ('06', 'Official Liquidator'), ('07', 'Court Receiver'), ('08', 'Investment in Mutual Funds Upto Rs. 50,000/- p.a. including SIP')], max_length=2, null=True, verbose_name='Second Pan Exempt Category')),
                ('third_holder_exempt_category', models.CharField(blank=True, choices=[('01', 'SIKKIM Resident'), ('02', 'Transactions carried out on behalf of STATE GOVT'), ('03', 'Transactions carried out on behalf of CENTRAL GOVT'), ('04', 'COURT APPOINTED OFFICIALS'), ('05', 'UN Entity/Multilateral agency exempt from paying tax in India'), ('06', 'Official Liquidator'), ('07', 'Court Receiver'), ('08', 'Investment in Mutual Funds Upto Rs. 50,000/- p.a. including SIP')], max_length=2, null=True, verbose_name='Third Pan Exempt Category')),
                ('guardian_exempt_category', models.CharField(blank=True, choices=[('01', 'SIKKIM Resident'), ('02', 'Transactions carried out on behalf of STATE GOVT'), ('03', 'Transactions carried out on behalf of CENTRAL GOVT'), ('04', 'COURT APPOINTED OFFICIALS'), ('05', 'UN Entity/Multilateral agency exempt from paying tax in India'), ('06', 'Official Liquidator'), ('07', 'Court Receiver'), ('08', 'Investment in Mutual Funds Upto Rs. 50,000/- p.a. including SIP')], max_length=2, null=True, verbose_name='Guardian Exempt Category')),
                ('client_type', models.CharField(blank=True, choices=[('P', 'Physical'), ('D', 'Demat')], max_length=1, null=True, verbose_name='Client Type')),
                ('account_type_1', models.CharField(blank=True, choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2, null=True, verbose_name='Account Type One')),
                ('account_type_2', models.CharField(blank=True, choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2, null=True, verbose_name='Account Type Two')),
                ('account_type_3', models.CharField(blank=True, choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2, null=True, verbose_name='Account Type Three')),
                ('account_type_4', models.CharField(blank=True, choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2, null=True, verbose_name='Account Type Four')),
                ('account_type_5', models.CharField(blank=True, choices=[('SB', 'Savings Bank'), ('CB', 'Current Bank'), ('NE', 'NRE Account'), ('NO', 'NRO Account')], max_length=2, null=True, verbose_name='Account Type Five')),
                ('div_pay_mode', models.CharField(blank=True, choices=[('01', 'Cheque'), ('02', 'Direct Credit'), ('03', 'ECS'), ('04', 'NEFT'), ('05', 'RTGS')], max_length=2, null=True, verbose_name='Div Pay Mode')),
                ('state_code', models.CharField(blank=True, choices=[('AN', 'Andaman & Nicobar'), ('AR', 'Arunachal Pradesh'), ('AP', 'Andhra Pradesh'), ('AS', 'Assam'), ('BH', 'Bihar'), ('CH', 'Chandigarh'), ('CG', 'Chhattisgarh'), ('GO', 'Goa'), ('GU', 'Gujarat'), ('HA', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JM', 'Jammu & Kashmir'), ('JK', 'Jharkhand'), ('KA', 'Karnataka'), ('KE', 'Kerala'), ('MP', 'Madhya Pradesh'), ('MA', 'Maharashtra'), ('MN', 'Manipur'), ('ME', 'Meghalaya'), ('MI', 'Mizoram'), ('NA', 'Nagaland'), ('ND', 'New Delhi'), ('OR', 'Orissa'), ('PO', 'Pondicherry'), ('PU', 'Punjab'), ('RA', 'Rajasthan'), ('SI', 'Sikkim'), ('TG', 'Telangana'), ('TN', 'Tamil Nadu'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UC', 'Uttaranchal'), ('WB', 'West Bengal'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('LD', 'Lakshadweep'), ('OH', 'Others')], max_length=2, null=True, verbose_name='State')),
                ('country_code', models.CharField(blank=True, choices=[('001', 'Afghanistan'), ('002', 'Aland Islands'), ('003', 'Albania'), ('004', 'Algeria'), ('005', 'American Samoa'), ('006', 'Andorra'), ('007', 'Angola'), ('008', 'Anguilla'), ('009', 'Antarctica'), ('010', 'Antigua And Barbuda'), ('011', 'Argentina'), ('012', 'Armenia'), ('013', 'Aruba'), ('014', 'Australia'), ('015', 'Austria'), ('016', 'Azerbaijan'), ('017', 'Bahamas'), ('018', 'Bahrain'), ('019', 'Bangladesh'), ('020', 'Barbados'), ('021', 'Belarus'), ('022', 'Belgium'), ('023', 'Belize'), ('024', 'Benin'), ('025', 'Bermuda'), ('026', 'Bhutan'), ('027', 'Bolivia'), ('028', 'Bosnia And Herzegovina'), ('029', 'Botswana'), ('030', 'Bouvet Island'), ('031', 'Brazil'), ('032', 'British Indian Ocean Territory'), ('033', 'Brunei Darussalam'), ('034', 'Bulgaria'), ('035', 'Burkina Faso'), ('036', 'Burundi'), ('037', 'Cambodia'), ('038', 'Cameroon'), ('039', 'Canada'), ('040', 'Cape Verde'), ('041', 'Cayman Islands'), ('042', 'Central African Republic'), ('043', 'Chad'), ('044', 'Chile'), ('045', 'China'), ('046', 'Christmas Island'), ('047', 'Cocos (Keeling) Islands'), ('048', 'Colombia'), ('049', 'Comoros'), ('050', 'Congo'), ('051', 'Congo, The Democratic Republic Of The'), ('052', 'Cook Islands'), ('053', 'Costa Rica'), ('054', 'Cote DIvoire'), ('055', 'Croatia'), ('056', 'Cuba'), ('057', 'Cyprus'), ('058', 'Czech Republic'), ('059', 'Denmark'), ('060', 'Djibouti'), ('061', 'Dominica'), ('062', 'Dominican Republic'), ('063', 'Ecuador'), ('064', 'Egypt'), ('065', 'El Salvador'), ('066', 'Equatorial Guinea'), ('067', 'Eritrea'), ('068', 'Estonia'), ('069', 'Ethiopia'), ('070', 'Falkland Islands (Malvinas)'), ('071', 'Faroe Islands'), ('072', 'Fiji'), ('073', 'Finland'), ('074', 'France'), ('075', 'French Guiana'), ('076', 'French Polynesia'), ('077', 'French Southern Territories'), ('078', 'Gabon'), ('079', 'Gambia'), ('080', 'Georgia'), ('081', 'Germany'), ('082', 'Ghana'), ('083', 'Gibraltar'), ('084', 'Greece'), ('085', 'Greenland'), ('086', 'Grenada'), ('087', 'Guadeloupe'), ('088', 'Guam'), ('089', 'Guatemala'), ('090', 'Guernsey'), ('091', 'Guinea'), ('092', 'Guinea-Bissau'), ('093', 'Guyana'), ('094', 'Haiti'), ('095', 'Heard Island And Mcdonald Islands'), ('096', 'Holy See (Vatican City State)'), ('097', 'Honduras'), ('098', 'Hong Kong'), ('099', 'Hungary'), ('100', 'Iceland'), ('India', 'India'), ('102', 'Indonesia'), ('103', 'Iran, Islamic Republic Of'), ('104', 'Iraq'), ('105', 'Ireland'), ('106', 'Isle Of Man'), ('107', 'Israel'), ('108', 'Italy'), ('109', 'Jamaica'), ('110', 'Japan'), ('111', 'Jersey'), ('112', 'Jordan'), ('113', 'Kazakhstan'), ('114', 'Kenya'), ('115', 'Kiribati'), ('116', 'Korea, Democratic Peoples Republic Of'), ('117', 'Korea, Republic Of'), ('118', 'Kuwait'), ('119', 'Kyrgyzstan'), ('120', 'Lao Peoples Democratic Republic'), ('121', 'Latvia'), ('122', 'Lebanon'), ('123', 'Lesotho'), ('124', 'Liberia'), ('125', 'Libyan Arab Jamahiriya'), ('126', 'Liechtenstein'), ('127', 'Lithuania'), ('128', 'Luxembourg'), ('129', 'Macao'), ('130', 'Macedonia, The Former Yugoslav Republic Of'), ('131', 'Madagascar'), ('132', 'Malawi'), ('133', 'Malaysia'), ('134', 'Maldives'), ('135', 'Mali'), ('136', 'Malta'), ('137', 'Marshall Islands'), ('138', 'Martinique'), ('139', 'Mauritania'), ('140', 'Mauritius'), ('141', 'Mayotte'), ('142', 'Mexico'), ('143', 'Micronesia, Federated States Of'), ('144', 'Moldova, Republic Of'), ('145', 'Monaco'), ('146', 'Mongolia'), ('147', 'Montserrat'), ('148', 'Morocco'), ('149', 'Mozambique'), ('150', 'Myanmar'), ('151', 'Namibia'), ('152', 'Nauru'), ('153', 'Nepal'), ('154', 'Netherlands'), ('155', 'Netherlands Antilles'), ('156', 'New Caledonia'), ('157', 'New Zealand'), ('158', 'Nicaragua'), ('159', 'Niger'), ('160', 'Nigeria'), ('161', 'Niue'), ('162', 'Norfolk Island'), ('163', 'Northern Mariana Islands'), ('164', 'Norway'), ('165', 'Oman'), ('166', 'Pakistan'), ('167', 'Palau'), ('168', 'Palestinian Territory, Occupied'), ('169', 'Panama'), ('170', 'Papua New Guinea'), ('171', 'Paraguay'), ('172', 'Peru'), ('173', 'Philippines'), ('174', 'Pitcairn'), ('175', 'Poland'), ('176', 'Portugal'), ('177', 'Puerto Rico'), ('178', 'Qatar'), ('179', 'Reunion'), ('180', 'Romania'), ('181', 'Russian Federation'), ('182', 'Rwanda'), ('183', 'Saint Helena'), ('184', 'Saint Kitts And Nevis'), ('185', 'Saint Lucia'), ('186', 'Saint Pierre And Miquelon'), ('187', 'Saint Vincent And The Grenadines'), ('188', 'Samoa'), ('189', 'San Marino'), ('190', 'Sao Tome And Principe'), ('191', 'Saudi Arabia'), ('192', 'Senegal'), ('193', 'Serbia And Montenegro'), ('194', 'Seychelles'), ('195', 'Sierra Leone'), ('196', 'Singapore'), ('197', 'Slovakia'), ('198', 'Slovenia'), ('199', 'Solomon Islands'), ('200', 'Somalia'), ('201', 'South Africa'), ('202', 'South Georgia And The South Sandwich Islands'), ('203', 'Spain'), ('204', 'Sri Lanka'), ('205', 'Sudan'), ('206', 'Suriname'), ('207', 'Svalbard And Jan Mayen'), ('208', 'Swaziland'), ('209', 'Sweden'), ('210', 'Switzerland'), ('211', 'Syrian Arab Republic'), ('212', 'Taiwan, Province Of China'), ('213', 'Tajikistan'), ('214', 'Tanzania, United Republic Of'), ('215', 'Thailand'), ('216', 'Timor-Leste'), ('217', 'Togo'), ('218', 'Tokelau'), ('219', 'Tonga'), ('220', 'Trinidad And Tobago'), ('221', 'Tunisia'), ('222', 'Turkey'), ('223', 'Turkmenistan'), ('224', 'Turks And Caicos Islands'), ('225', 'Tuvalu'), ('226', 'Uganda'), ('227', 'Ukraine'), ('228', 'United Arab Emirates'), ('229', 'United Kingdom'), ('230', 'United States of America'), ('231', 'United States Minor Outlying Islands'), ('232', 'Uruguay'), ('233', 'Uzbekistan'), ('234', 'Vanuatu'), ('235', 'Venezuela'), ('236', 'Viet Nam'), ('237', 'Virgin Islands, British'), ('238', 'Virgin Islands, U.S.'), ('239', 'Wallis And Futuna'), ('240', 'Western Sahara'), ('241', 'Yemen'), ('242', 'Zambia'), ('243', 'Zimbabwe')], max_length=35, null=True, verbose_name='Country')),
                ('communication_mode', models.CharField(blank=True, choices=[('P', 'Physical'), ('E', 'Electronic'), ('M', 'Mobile')], max_length=2, null=True, verbose_name='Communication Mode')),
                ('nominee_1_relationship', models.CharField(blank=True, choices=[('01', 'AUNT (Nominee Relationship)'), ('02', 'BROTHER-IN-LAW (Nominee Relationship)'), ('03', 'BROTHER (Nominee Relationship)'), ('04', 'DAUGHTER (Nominee Relationship)'), ('05', 'DAUGHTER-IN-LAW (Nominee Relationship)'), ('06', 'FATHER (Nominee & Guardian Relationship)'), ('07', 'FATHER-IN-LAW (Nominee Relationship)'), ('08', 'GRAND DAUGHTER (Nominee Relationship)'), ('09', 'GRAND FATHER (Nominee Relationship)'), ('10', 'GRAND MOTHER (Nominee Relationship)'), ('11', 'GRAND SON (Nominee Relationship)'), ('12', 'MOTHER-IN-LAW (Nominee Relationship)'), ('13', 'MOTHER (Nominee & Guardian Relationship)'), ('14', 'NEPHEW (Nominee Relationship)'), ('15', 'NIECE (Nominee Relationship)'), ('16', 'SISTER (Nominee Relationship)'), ('17', 'SISTER-IN-LAW (Nominee Relationship)'), ('18', 'SON (Nominee Relationship)'), ('19', 'SON-IN-LAW (Nominee Relationship)'), ('20', 'SPOUSE (Nominee Relationship)'), ('21', 'UNCLE (Nominee Relationship)'), ('22', 'OTHERS (Nominee Relationship)'), ('23', 'COURT APPOINTED LEGAL GUARDIAN (Guardian Relationship)')], max_length=2, null=True, verbose_name='Nominee 1 Relationship')),
                ('nominee_2_relationship', models.CharField(blank=True, choices=[('01', 'AUNT (Nominee Relationship)'), ('02', 'BROTHER-IN-LAW (Nominee Relationship)'), ('03', 'BROTHER (Nominee Relationship)'), ('04', 'DAUGHTER (Nominee Relationship)'), ('05', 'DAUGHTER-IN-LAW (Nominee Relationship)'), ('06', 'FATHER (Nominee & Guardian Relationship)'), ('07', 'FATHER-IN-LAW (Nominee Relationship)'), ('08', 'GRAND DAUGHTER (Nominee Relationship)'), ('09', 'GRAND FATHER (Nominee Relationship)'), ('10', 'GRAND MOTHER (Nominee Relationship)'), ('11', 'GRAND SON (Nominee Relationship)'), ('12', 'MOTHER-IN-LAW (Nominee Relationship)'), ('13', 'MOTHER (Nominee & Guardian Relationship)'), ('14', 'NEPHEW (Nominee Relationship)'), ('15', 'NIECE (Nominee Relationship)'), ('16', 'SISTER (Nominee Relationship)'), ('17', 'SISTER-IN-LAW (Nominee Relationship)'), ('18', 'SON (Nominee Relationship)'), ('19', 'SON-IN-LAW (Nominee Relationship)'), ('20', 'SPOUSE (Nominee Relationship)'), ('21', 'UNCLE (Nominee Relationship)'), ('22', 'OTHERS (Nominee Relationship)'), ('23', 'COURT APPOINTED LEGAL GUARDIAN (Guardian Relationship)')], max_length=2, null=True, verbose_name='Nominee 2 Relationship')),
                ('nominee_3_relationship', models.CharField(blank=True, choices=[('01', 'AUNT (Nominee Relationship)'), ('02', 'BROTHER-IN-LAW (Nominee Relationship)'), ('03', 'BROTHER (Nominee Relationship)'), ('04', 'DAUGHTER (Nominee Relationship)'), ('05', 'DAUGHTER-IN-LAW (Nominee Relationship)'), ('06', 'FATHER (Nominee & Guardian Relationship)'), ('07', 'FATHER-IN-LAW (Nominee Relationship)'), ('08', 'GRAND DAUGHTER (Nominee Relationship)'), ('09', 'GRAND FATHER (Nominee Relationship)'), ('10', 'GRAND MOTHER (Nominee Relationship)'), ('11', 'GRAND SON (Nominee Relationship)'), ('12', 'MOTHER-IN-LAW (Nominee Relationship)'), ('13', 'MOTHER (Nominee & Guardian Relationship)'), ('14', 'NEPHEW (Nominee Relationship)'), ('15', 'NIECE (Nominee Relationship)'), ('16', 'SISTER (Nominee Relationship)'), ('17', 'SISTER-IN-LAW (Nominee Relationship)'), ('18', 'SON (Nominee Relationship)'), ('19', 'SON-IN-LAW (Nominee Relationship)'), ('20', 'SPOUSE (Nominee Relationship)'), ('21', 'UNCLE (Nominee Relationship)'), ('22', 'OTHERS (Nominee Relationship)'), ('23', 'COURT APPOINTED LEGAL GUARDIAN (Guardian Relationship)')], max_length=2, null=True, verbose_name='Nominee 3 Relationship')),
                ('guardian_relationship', models.CharField(blank=True, choices=[('01', 'AUNT (Nominee Relationship)'), ('02', 'BROTHER-IN-LAW (Nominee Relationship)'), ('03', 'BROTHER (Nominee Relationship)'), ('04', 'DAUGHTER (Nominee Relationship)'), ('05', 'DAUGHTER-IN-LAW (Nominee Relationship)'), ('06', 'FATHER (Nominee & Guardian Relationship)'), ('07', 'FATHER-IN-LAW (Nominee Relationship)'), ('08', 'GRAND DAUGHTER (Nominee Relationship)'), ('09', 'GRAND FATHER (Nominee Relationship)'), ('10', 'GRAND MOTHER (Nominee Relationship)'), ('11', 'GRAND SON (Nominee Relationship)'), ('12', 'MOTHER-IN-LAW (Nominee Relationship)'), ('13', 'MOTHER (Nominee & Guardian Relationship)'), ('14', 'NEPHEW (Nominee Relationship)'), ('15', 'NIECE (Nominee Relationship)'), ('16', 'SISTER (Nominee Relationship)'), ('17', 'SISTER-IN-LAW (Nominee Relationship)'), ('18', 'SON (Nominee Relationship)'), ('19', 'SON-IN-LAW (Nominee Relationship)'), ('20', 'SPOUSE (Nominee Relationship)'), ('21', 'UNCLE (Nominee Relationship)'), ('22', 'OTHERS (Nominee Relationship)'), ('23', 'COURT APPOINTED LEGAL GUARDIAN (Guardian Relationship)')], max_length=2, null=True, verbose_name='Guardian Relationship')),
                ('primary_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=1, null=True, verbose_name='Primary Holder Kyc Type')),
                ('second_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=1, null=True, verbose_name='Second Holder Kyc Type')),
                ('third_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=1, null=True, verbose_name='Third Holder Kyc Type')),
                ('guardian_holder_kyc_type', models.CharField(blank=True, choices=[('K', 'KRA Compliant'), ('C', 'CKYC Compliant'), ('B', 'BIOMETRIC KYC'), ('E', 'Aadhaar Ekyc PAN')], max_length=1, null=True, verbose_name='Gaurdian Holder Kyc Type')),
                ('paperless_flag', models.CharField(blank=True, choices=[('P', 'Paper'), ('Z', 'paperless')], max_length=1, null=True, verbose_name='Paperless Flag')),
                ('filler_1_mobile_declaration_flag', models.CharField(blank=True, choices=[('SE', 'Self'), ('SP', 'Spouse'), ('DC', 'Dependent Children'), ('DS', 'Dependent Siblings'), ('DP', 'Dependent Parents'), ('GD', 'Guardian'), ('PM', 'PMS'), ('CD', 'Custodian'), ('PO', 'POA')], max_length=2, null=True, verbose_name='Filler 1 Mobile Declaration Flag')),
                ('filler_2_email_declaration_flag', models.CharField(blank=True, choices=[('SE', 'Self'), ('SP', 'Spouse'), ('DC', 'Dependent Children'), ('DS', 'Dependent Siblings'), ('DP', 'Dependent Parents'), ('GD', 'Guardian'), ('PM', 'PMS'), ('CD', 'Custodian'), ('PO', 'POA')], max_length=2, null=True, verbose_name='Filler 1 Email Declaration Flag')),
                ('second_holder_email_declaration', models.CharField(blank=True, choices=[('SE', 'Self'), ('SP', 'Spouse'), ('DC', 'Dependent Children'), ('DS', 'Dependent Siblings'), ('DP', 'Dependent Parents'), ('GD', 'Guardian'), ('PM', 'PMS'), ('CD', 'Custodian'), ('PO', 'POA')], max_length=2, null=True, verbose_name='Second Holder Email Declaration')),
                ('second_holder_mobile_declaration', models.CharField(blank=True, choices=[('SE', 'Self'), ('SP', 'Spouse'), ('DC', 'Dependent Children'), ('DS', 'Dependent Siblings'), ('DP', 'Dependent Parents'), ('GD', 'Guardian'), ('PM', 'PMS'), ('CD', 'Custodian'), ('PO', 'POA')], max_length=2, null=True, verbose_name='Second Holder Mobile Declaration')),
                ('third_holder_mobile_declaration', models.CharField(blank=True, choices=[('SE', 'Self'), ('SP', 'Spouse'), ('DC', 'Dependent Children'), ('DS', 'Dependent Siblings'), ('DP', 'Dependent Parents'), ('GD', 'Guardian'), ('PM', 'PMS'), ('CD', 'Custodian'), ('PO', 'POA')], max_length=2, null=True, verbose_name='Third Holder Mobile Declaration')),
                ('third_holder_email_declaration', models.CharField(blank=True, choices=[('SE', 'Self'), ('SP', 'Spouse'), ('DC', 'Dependent Children'), ('DS', 'Dependent Siblings'), ('DP', 'Dependent Parents'), ('GD', 'Guardian'), ('PM', 'PMS'), ('CD', 'Custodian'), ('PO', 'POA')], max_length=2, null=True, verbose_name='Third Holder Email Declaration')),
                ('nomination_auth_mode', models.CharField(blank=True, choices=[('W', 'Wet Signature'), ('E', 'eSign'), ('O', 'OTP Authentication')], max_length=1, null=True, verbose_name='Nomination Auth Mode')),
                ('filler_1', models.CharField(blank=True, max_length=50, null=True)),
                ('filler_2', models.CharField(blank=True, max_length=50, null=True)),
                ('otp', models.CharField(blank=True, max_length=10, null=True)),
                ('Signature_image', models.ImageField(blank=True, null=True, upload_to='Signature/')),
                ('Term_conditions', models.BooleanField(blank=True, default=True, null=True)),
                ('is_submit', models.BooleanField(blank=True, default=False, null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('utimestamp', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.agent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='XSIPTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheme_code', models.CharField(max_length=20)),
                ('client_code', models.CharField(max_length=20)),
                ('xsipregid', models.CharField(blank=True, max_length=20, null=True)),
                ('int_ref_no', models.CharField(blank=True, max_length=50, null=True)),
                ('trans_mode', models.CharField(choices=[('D', 'Demat'), ('P', 'Physical')], max_length=5)),
                ('dp_trans_mode', models.CharField(choices=[('C', 'CDSL'), ('N', 'NSDL'), ('P', 'PHYSICAL')], max_length=5)),
                ('start_date', models.DateField()),
                ('frequency_type', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('WEEKLY', 'Weekly')], max_length=20)),
                ('frequency_allowed', models.IntegerField()),
                ('installments_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('no_of_installments', models.IntegerField()),
                ('remarks', models.CharField(blank=True, max_length=100, null=True)),
                ('folio_no', models.CharField(blank=True, max_length=50, null=True)),
                ('first_order_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=5)),
                ('sub_br_code', models.CharField(blank=True, max_length=20, null=True)),
                ('euin', models.CharField(blank=True, max_length=20, null=True)),
                ('euin_flag', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=5)),
                ('dpc', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=5)),
                ('sub_broker_arn', models.CharField(blank=True, max_length=50, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('regn_type', models.CharField(choices=[('ISIP', 'ISIP'), ('XSIP', 'XSIP')], max_length=10)),
                ('brokerage', models.CharField(blank=True, max_length=50, null=True)),
                ('mandate_id', models.CharField(max_length=20)),
                ('xsip_type', models.CharField(choices=[('01', 'Regular XSIP'), ('02', 'Power XSIP'), ('03', 'Freedom XSIP'), ('07', 'MITRA XSIP'), ('08', 'SAMPOORNA XSIP'), ('09', 'WHITEOAK XSIP')], max_length=10)),
                ('target_scheme', models.CharField(blank=True, max_length=50, null=True)),
                ('target_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('goal_type', models.CharField(blank=True, choices=[('01', 'Kids Marriage'), ('02', 'Retirement Planning'), ('03', 'Kids’ Education'), ('04', 'Tax Savings'), ('05', 'Dream House'), ('06', 'Dream Car'), ('07', 'Dream Vacation'), ('08', 'Others')], max_length=50, null=True)),
                ('goal_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('filler1', models.CharField(blank=True, max_length=50, null=True)),
                ('filler2', models.CharField(blank=True, max_length=50, null=True)),
                ('filler3', models.CharField(blank=True, max_length=50, null=True)),
                ('filler4', models.CharField(blank=True, max_length=50, null=True)),
                ('filler5', models.CharField(blank=True, max_length=50, null=True)),
                ('filler6', models.CharField(blank=True, max_length=50, null=True)),
                ('filler7', models.CharField(blank=True, max_length=50, null=True)),
                ('filler8', models.CharField(blank=True, max_length=50, null=True)),
                ('filler9', models.CharField(blank=True, max_length=50, null=True)),
                ('filler10', models.CharField(blank=True, max_length=50, null=True)),
                ('cease_bse_code', models.CharField(blank=True, choices=[('01', 'Non availability of Funds'), ('02', 'Scheme not performing'), ('03', 'Service issue'), ('04', 'Load Revised'), ('05', 'Wish to invest in other schemes'), ('06', 'Change in Fund Manager'), ('07', 'Goal Achieved'), ('08', 'Not comfortable with market volatility'), ('09', 'Will be restarting SIP after few months'), ('10', 'Modifications in bank/mandate/date etc'), ('11', 'I have decided to invest elsewhere'), ('12', 'This is not the right time to invest'), ('13', 'Others (pls specify the reason)')], max_length=10, null=True)),
                ('status', models.CharField(blank=True, choices=[('INACTIVE', 'Inactive'), ('ACTIVE', 'Active'), ('CANCELLED', 'Cancelled')], default='INACTIVE', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.agent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
